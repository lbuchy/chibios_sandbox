/*
    Copyright (C) 2013 Genist
*/

#ifndef _MS5803_H_
#define _MS5803_H_


typedef enum {
  MS5803_CMD_RESET              = 0x1e,
  MS5803_CMD_CONVERTD1_OSR256   = 0x40,
  MS5803_CMD_CONVERTD1_OSR512   = 0x42,
  MS5803_CMD_CONVERTD1_OSR1024  = 0x44,
  MS5803_CMD_CONVERTD1_OSR2048  = 0x46,
  MS5803_CMD_CONVERTD1_OSR4096  = 0x48,
  MS5803_CMD_CONVERTD2_OSR256   = 0x50,
  MS5803_CMD_CONVERTD2_OSR512   = 0x52,
  MS5803_CMD_CONVERTD2_OSR1024  = 0x54,
  MS5803_CMD_CONVERTD2_OSR2048  = 0x56,
  MS5803_CMD_CONVERTD2_OSR4096  = 0x58,
  MS5803_CMD_ADC_READ           = 0x0,
  MS5803_CMD_PROM_READ_BASE     = 0xa0
} MS5803_CMDS;

typedef enum {
  MS5803_COEFFS_PRESSURE_SENSITIVITY          = 0x1,
  MS5803_COEFFS_PRESSURE_OFFSET               = 0x2,
  MS5803_COEFFS_TEMP_COEFF_OF_PRESSURE_SENS   = 0x3,
  MS5803_COEFFS_TEMP_COEFF_OF_PRESSURE_OFFSET = 0x4,
  MS5803_COEFFS_REF_TEMP                      = 0x5,
  MS5803_COEFFS_TEMP_COEFF_OF_TEMP            = 0x6
} MS5803_COEFFS;

#define MS5803_CMD_PROM_READ(n) (MS5803_CMD_PROM_READ_BASE | ((n & 7) << 1))

#define MS5803_CMD_RESET_WAIT_MILLISEC   3  /* actually 2.8ms */
#define MS5803_CMD_CONVERT_WAIT_MILLISEC 10 /* actually 8.22ms */
#define MS5803_NUM_PROM_VALS_START_IDX   0
#define MS5803_NUM_PROM_VALS             8  /* 8 16 bit values */
#define MS5803_NUM_COEFF                 6

extern bool_t   ms5803_resetAndReadCoefficients(SPIDriver *spip);
extern uint32_t ms5803_readTempAndPressure(SPIDriver *spip);

#endif /* _MS5803_H_ */
